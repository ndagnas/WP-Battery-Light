//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : Frm_Home.xaml.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation de la frame Home
// Créé le       : 31/05/2014
// Modifié le    : 04/06/2014
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Windows;
using System.Reflection;
using System.IO.IsolatedStorage;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Microsoft.Phone.Info;
using Microsoft.Phone.Shell;
using Microsoft.Phone.Tasks;
using Microsoft.Phone.Controls;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Windows.UI;
using Windows.Phone.Devices.Power;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Batterie.Resources;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Scheduler;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "Batterie"
//*******************************************************************************************************************************
namespace Batterie
	{
	
	//  #   #   ###   #   #  #####
	//  #   #  #   #  ## ##  #    
	//  #####  #   #  # # #  ###  
	//  #   #  #   #  #   #  #    
	//  #   #   ###   #   #  #####

	//***************************************************************************************************************************
	#region // Frame Home
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Définit la fenêtre principale.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public partial class Frm_Home : PhoneApplicationPage
		{
		//***********************************************************************************************************************
		/// <summary>
		/// Initialise une nouvelle instance de l'objet <b>Frm_Home</b>.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public Frm_Home ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.InitializeComponent ();
			this.Refresh             ();

			DeviceStatus.PowerSourceChanged                     += (S, A) => { this.Refresh (); };
			Battery.GetDefault ().RemainingChargePercentChanged += (S, A) => { this.Refresh (); };
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				Assembly Assembly = Assembly.GetExecutingAssembly ();
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				if ( Assembly != null )
					{
					string[] AssemblyName = Assembly.FullName.Split ( ',' );

					if ( AssemblyName.Length > 1 )
						{
						var Vr = new Version ( AssemblyName[1].Split('=')[1] );

						this.VersionLabel.Text = Vr.ToString ();
						}
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			var AppBarPinButton  = new ApplicationBarIconButton ();
			var AppBarRateButton = new ApplicationBarIconButton ();

			AppBarPinButton .IconUri = new Uri ( "/Images/pin.png" , UriKind.Relative );
			AppBarRateButton.IconUri = new Uri ( "/Images/rate.png", UriKind.Relative );

			AppBarPinButton .Text = AppResources.AppBarPinButton;
			AppBarRateButton.Text = AppResources.AppBarRateButton;

			AppBarPinButton .Click += this.OnPinClick;
			AppBarRateButton.Click += this.OnRateClick;

			this.ApplicationBar.Buttons.Add ( AppBarPinButton  );
			this.ApplicationBar.Buttons.Add ( AppBarRateButton );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Raffraichi les données.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		private void Refresh ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			this.Dispatcher.BeginInvoke ( () =>
				{
				//---------------------------------------------------------------------------------------------------------------
				try
					{
					//-----------------------------------------------------------------------------------------------------------
					var BatteryInfos = Battery.GetDefault ();
			
					int ChargePercent = BatteryInfos.RemainingChargePercent;
					var DischargeTime = BatteryInfos.RemainingDischargeTime;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					this.BattIndicator.Width = ( 268 * ChargePercent ) / 100;

					string Percent = "";
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					if      ( DischargeTime.Minutes == 1 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Minutes, AppResources.LabelMinute  );
					else if ( DischargeTime.Minutes >  0 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Minutes, AppResources.LabelMinutes );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					if      ( DischargeTime.Hours == 1 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Hours, AppResources.LabelHour  ) + 
						                                                    ( ( ( Percent.Length > 0 ) ? ", " : "" ) + Percent );
					else if ( DischargeTime.Hours >  0 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Hours, AppResources.LabelHours ) + 
						                                                    ( ( ( Percent.Length > 0 ) ? ", " : "" ) + Percent );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					if      ( DischargeTime.Days == 1 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Days, AppResources.LabelDay  ) + 
						                                                    ( ( ( Percent.Length > 0 ) ? ", " : "" ) + Percent );
					else if ( DischargeTime.Days >  0 )
						Percent = string.Format ( "{0} {1}", DischargeTime.Days, AppResources.LabelDays ) + 
						                                                    ( ( ( Percent.Length > 0 ) ? ", " : "" ) + Percent );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					this.BattLevel.Text = string.Format ( "{0} %", ChargePercent );

					this.BattRemaining.Text = Percent;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					switch ( DeviceStatus.PowerSource )
						{
						case PowerSource.Battery  :
							{
							this.AlimentationSource.Text       = AppResources.LabelPowerSourceBattery; 
						    this.RemainingBlock    .Visibility = Visibility.Visible  ; break;
							}
						case PowerSource.External :
							{
							this.AlimentationSource.Text       = AppResources.LabelPowerSourceExternal; 
							this.RemainingBlock    .Visibility = Visibility.Collapsed; break;
							}
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					Scheduler.BatteryTile.Refresh ();
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				catch {}
				//---------------------------------------------------------------------------------------------------------------
				} );
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Déclenche l'événement <b>Loaded</b>.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel.</param>
		/// <param name="Args"><b>RoutedEventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnLoaded ( object Sender, RoutedEventArgs Args )
			{
			this.ApplicationBar.IsVisible = true;
			
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				if ( Instance.ReviewAvailable () )
					{
					//-----------------------------------------------------------------------------------------------------------
					this.Dispatcher.BeginInvoke ( () =>
						{
						//-------------------------------------------------------------------------------------------------------
						string Caption = AppResources.ReviewCaption;
						string Message = string.Format ( "{0}\n{1}", AppResources.ReviewMessageFirstLine,
							                                        AppResources.ReviewMessageSecondLine );
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						if ( MessageBox.Show ( Message, Caption, MessageBoxButton.OKCancel ) == MessageBoxResult.OK )
							{
							//---------------------------------------------------------------------------------------------------
							Instance.RegisterReview ( true );

							(new MarketplaceReviewTask ()).Show ();
							//---------------------------------------------------------------------------------------------------
							}
						//-------------------------------------------------------------------------------------------------------
						else { Instance.RegisterReview ( false ); }
						//-------------------------------------------------------------------------------------------------------
						} );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le bouton 'épingler'.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnPinClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			Scheduler.BatteryTile.Pin ();
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		/// <summary>
		/// Se produit lors d'un clic sur le bouton 'évaluer'.
		/// </summary>
		/// <param name="Sender">Objet source de l'appel</param>
		/// <param name="Args"><b>EventArgs</b> qui contient les données d'événement.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		private void OnRateClick ( object Sender, EventArgs Args )
			{
			//-------------------------------------------------------------------------------------------------------------------
			Instance.RegisterReview ( true );

			try { (new MarketplaceReviewTask ()).Show (); } catch {}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "Batterie"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
